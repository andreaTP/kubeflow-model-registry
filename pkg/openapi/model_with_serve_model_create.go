/*
Model Registry REST API

REST API for Model Registry to create and manage ML model metadata

API version: v1alpha1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WithServeModelCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WithServeModelCreate{}

// WithServeModelCreate An ML model serving action.
type WithServeModelCreate struct {
	// ID of the `ModelVersion` that was served in `InferenceService`.
	ModelVersionId string `json:"modelVersionId"`
}

// NewWithServeModelCreate instantiates a new WithServeModelCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWithServeModelCreate(modelVersionId string) *WithServeModelCreate {
	this := WithServeModelCreate{}
	this.ModelVersionId = modelVersionId
	return &this
}

// NewWithServeModelCreateWithDefaults instantiates a new WithServeModelCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWithServeModelCreateWithDefaults() *WithServeModelCreate {
	this := WithServeModelCreate{}
	return &this
}

// GetModelVersionId returns the ModelVersionId field value
func (o *WithServeModelCreate) GetModelVersionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelVersionId
}

// GetModelVersionIdOk returns a tuple with the ModelVersionId field value
// and a boolean to check if the value has been set.
func (o *WithServeModelCreate) GetModelVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelVersionId, true
}

// SetModelVersionId sets field value
func (o *WithServeModelCreate) SetModelVersionId(v string) {
	o.ModelVersionId = v
}

func (o WithServeModelCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WithServeModelCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["modelVersionId"] = o.ModelVersionId
	return toSerialize, nil
}

type NullableWithServeModelCreate struct {
	value *WithServeModelCreate
	isSet bool
}

func (v NullableWithServeModelCreate) Get() *WithServeModelCreate {
	return v.value
}

func (v *NullableWithServeModelCreate) Set(val *WithServeModelCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableWithServeModelCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableWithServeModelCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWithServeModelCreate(val *WithServeModelCreate) *NullableWithServeModelCreate {
	return &NullableWithServeModelCreate{value: val, isSet: true}
}

func (v NullableWithServeModelCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWithServeModelCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
