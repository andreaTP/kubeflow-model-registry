/*
Model Registry REST API

REST API for Model Registry to create and manage ML model metadata

API version: v1alpha3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WithModelArtifactUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WithModelArtifactUpdate{}

// WithModelArtifactUpdate An ML model artifact.
type WithModelArtifactUpdate struct {
	// Name of the model format.
	ModelFormatName *string `json:"modelFormatName,omitempty"`
	// Storage secret name.
	StorageKey *string `json:"storageKey,omitempty"`
	// Path for model in storage provided by `storageKey`.
	StoragePath *string `json:"storagePath,omitempty"`
	// Version of the model format.
	ModelFormatVersion *string `json:"modelFormatVersion,omitempty"`
	// Name of the service account with storage secret.
	ServiceAccountName *string `json:"serviceAccountName,omitempty"`
}

// NewWithModelArtifactUpdate instantiates a new WithModelArtifactUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWithModelArtifactUpdate() *WithModelArtifactUpdate {
	this := WithModelArtifactUpdate{}
	return &this
}

// NewWithModelArtifactUpdateWithDefaults instantiates a new WithModelArtifactUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWithModelArtifactUpdateWithDefaults() *WithModelArtifactUpdate {
	this := WithModelArtifactUpdate{}
	return &this
}

// GetModelFormatName returns the ModelFormatName field value if set, zero value otherwise.
func (o *WithModelArtifactUpdate) GetModelFormatName() string {
	if o == nil || IsNil(o.ModelFormatName) {
		var ret string
		return ret
	}
	return *o.ModelFormatName
}

// GetModelFormatNameOk returns a tuple with the ModelFormatName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WithModelArtifactUpdate) GetModelFormatNameOk() (*string, bool) {
	if o == nil || IsNil(o.ModelFormatName) {
		return nil, false
	}
	return o.ModelFormatName, true
}

// HasModelFormatName returns a boolean if a field has been set.
func (o *WithModelArtifactUpdate) HasModelFormatName() bool {
	if o != nil && !IsNil(o.ModelFormatName) {
		return true
	}

	return false
}

// SetModelFormatName gets a reference to the given string and assigns it to the ModelFormatName field.
func (o *WithModelArtifactUpdate) SetModelFormatName(v string) {
	o.ModelFormatName = &v
}

// GetStorageKey returns the StorageKey field value if set, zero value otherwise.
func (o *WithModelArtifactUpdate) GetStorageKey() string {
	if o == nil || IsNil(o.StorageKey) {
		var ret string
		return ret
	}
	return *o.StorageKey
}

// GetStorageKeyOk returns a tuple with the StorageKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WithModelArtifactUpdate) GetStorageKeyOk() (*string, bool) {
	if o == nil || IsNil(o.StorageKey) {
		return nil, false
	}
	return o.StorageKey, true
}

// HasStorageKey returns a boolean if a field has been set.
func (o *WithModelArtifactUpdate) HasStorageKey() bool {
	if o != nil && !IsNil(o.StorageKey) {
		return true
	}

	return false
}

// SetStorageKey gets a reference to the given string and assigns it to the StorageKey field.
func (o *WithModelArtifactUpdate) SetStorageKey(v string) {
	o.StorageKey = &v
}

// GetStoragePath returns the StoragePath field value if set, zero value otherwise.
func (o *WithModelArtifactUpdate) GetStoragePath() string {
	if o == nil || IsNil(o.StoragePath) {
		var ret string
		return ret
	}
	return *o.StoragePath
}

// GetStoragePathOk returns a tuple with the StoragePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WithModelArtifactUpdate) GetStoragePathOk() (*string, bool) {
	if o == nil || IsNil(o.StoragePath) {
		return nil, false
	}
	return o.StoragePath, true
}

// HasStoragePath returns a boolean if a field has been set.
func (o *WithModelArtifactUpdate) HasStoragePath() bool {
	if o != nil && !IsNil(o.StoragePath) {
		return true
	}

	return false
}

// SetStoragePath gets a reference to the given string and assigns it to the StoragePath field.
func (o *WithModelArtifactUpdate) SetStoragePath(v string) {
	o.StoragePath = &v
}

// GetModelFormatVersion returns the ModelFormatVersion field value if set, zero value otherwise.
func (o *WithModelArtifactUpdate) GetModelFormatVersion() string {
	if o == nil || IsNil(o.ModelFormatVersion) {
		var ret string
		return ret
	}
	return *o.ModelFormatVersion
}

// GetModelFormatVersionOk returns a tuple with the ModelFormatVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WithModelArtifactUpdate) GetModelFormatVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ModelFormatVersion) {
		return nil, false
	}
	return o.ModelFormatVersion, true
}

// HasModelFormatVersion returns a boolean if a field has been set.
func (o *WithModelArtifactUpdate) HasModelFormatVersion() bool {
	if o != nil && !IsNil(o.ModelFormatVersion) {
		return true
	}

	return false
}

// SetModelFormatVersion gets a reference to the given string and assigns it to the ModelFormatVersion field.
func (o *WithModelArtifactUpdate) SetModelFormatVersion(v string) {
	o.ModelFormatVersion = &v
}

// GetServiceAccountName returns the ServiceAccountName field value if set, zero value otherwise.
func (o *WithModelArtifactUpdate) GetServiceAccountName() string {
	if o == nil || IsNil(o.ServiceAccountName) {
		var ret string
		return ret
	}
	return *o.ServiceAccountName
}

// GetServiceAccountNameOk returns a tuple with the ServiceAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WithModelArtifactUpdate) GetServiceAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAccountName) {
		return nil, false
	}
	return o.ServiceAccountName, true
}

// HasServiceAccountName returns a boolean if a field has been set.
func (o *WithModelArtifactUpdate) HasServiceAccountName() bool {
	if o != nil && !IsNil(o.ServiceAccountName) {
		return true
	}

	return false
}

// SetServiceAccountName gets a reference to the given string and assigns it to the ServiceAccountName field.
func (o *WithModelArtifactUpdate) SetServiceAccountName(v string) {
	o.ServiceAccountName = &v
}

func (o WithModelArtifactUpdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WithModelArtifactUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ModelFormatName) {
		toSerialize["modelFormatName"] = o.ModelFormatName
	}
	if !IsNil(o.StorageKey) {
		toSerialize["storageKey"] = o.StorageKey
	}
	if !IsNil(o.StoragePath) {
		toSerialize["storagePath"] = o.StoragePath
	}
	if !IsNil(o.ModelFormatVersion) {
		toSerialize["modelFormatVersion"] = o.ModelFormatVersion
	}
	if !IsNil(o.ServiceAccountName) {
		toSerialize["serviceAccountName"] = o.ServiceAccountName
	}
	return toSerialize, nil
}

type NullableWithModelArtifactUpdate struct {
	value *WithModelArtifactUpdate
	isSet bool
}

func (v NullableWithModelArtifactUpdate) Get() *WithModelArtifactUpdate {
	return v.value
}

func (v *NullableWithModelArtifactUpdate) Set(val *WithModelArtifactUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableWithModelArtifactUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableWithModelArtifactUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWithModelArtifactUpdate(val *WithModelArtifactUpdate) *NullableWithModelArtifactUpdate {
	return &NullableWithModelArtifactUpdate{value: val, isSet: true}
}

func (v NullableWithModelArtifactUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWithModelArtifactUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
