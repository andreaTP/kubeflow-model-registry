/*
Model Registry REST API

REST API for Model Registry to create and manage ML model metadata

API version: v1alpha1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WithInferenceServiceCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WithInferenceServiceCreate{}

// WithInferenceServiceCreate An `InferenceService` entity in a `ServingEnvironment` represents a deployed `ModelVersion` from a `RegisteredModel` created by Model Serving.
type WithInferenceServiceCreate struct {
	// ID of the `RegisteredModel` to serve.
	RegisteredModelId string `json:"registeredModelId"`
	// ID of the parent `ServingEnvironment` for this `InferenceService` entity.
	ServingEnvironmentId string `json:"servingEnvironmentId"`
}

// NewWithInferenceServiceCreate instantiates a new WithInferenceServiceCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWithInferenceServiceCreate(registeredModelId string, servingEnvironmentId string) *WithInferenceServiceCreate {
	this := WithInferenceServiceCreate{}
	this.RegisteredModelId = registeredModelId
	this.ServingEnvironmentId = servingEnvironmentId
	return &this
}

// NewWithInferenceServiceCreateWithDefaults instantiates a new WithInferenceServiceCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWithInferenceServiceCreateWithDefaults() *WithInferenceServiceCreate {
	this := WithInferenceServiceCreate{}
	return &this
}

// GetRegisteredModelId returns the RegisteredModelId field value
func (o *WithInferenceServiceCreate) GetRegisteredModelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegisteredModelId
}

// GetRegisteredModelIdOk returns a tuple with the RegisteredModelId field value
// and a boolean to check if the value has been set.
func (o *WithInferenceServiceCreate) GetRegisteredModelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegisteredModelId, true
}

// SetRegisteredModelId sets field value
func (o *WithInferenceServiceCreate) SetRegisteredModelId(v string) {
	o.RegisteredModelId = v
}

// GetServingEnvironmentId returns the ServingEnvironmentId field value
func (o *WithInferenceServiceCreate) GetServingEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServingEnvironmentId
}

// GetServingEnvironmentIdOk returns a tuple with the ServingEnvironmentId field value
// and a boolean to check if the value has been set.
func (o *WithInferenceServiceCreate) GetServingEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServingEnvironmentId, true
}

// SetServingEnvironmentId sets field value
func (o *WithInferenceServiceCreate) SetServingEnvironmentId(v string) {
	o.ServingEnvironmentId = v
}

func (o WithInferenceServiceCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WithInferenceServiceCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["registeredModelId"] = o.RegisteredModelId
	toSerialize["servingEnvironmentId"] = o.ServingEnvironmentId
	return toSerialize, nil
}

type NullableWithInferenceServiceCreate struct {
	value *WithInferenceServiceCreate
	isSet bool
}

func (v NullableWithInferenceServiceCreate) Get() *WithInferenceServiceCreate {
	return v.value
}

func (v *NullableWithInferenceServiceCreate) Set(val *WithInferenceServiceCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableWithInferenceServiceCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableWithInferenceServiceCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWithInferenceServiceCreate(val *WithInferenceServiceCreate) *NullableWithInferenceServiceCreate {
	return &NullableWithInferenceServiceCreate{value: val, isSet: true}
}

func (v NullableWithInferenceServiceCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWithInferenceServiceCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
